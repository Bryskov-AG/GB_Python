# Задача №1. 
# Семинар 1. Ввод-вывод, операторы ветвления
# За день машина проезжает n километров. Сколько
# дней нужно, чтобы проехать маршрут длиной m
# километров? При решении этой задачи нельзя
# пользоваться условной инструкцией if и циклами.
# Input:
# n = 700
# m = 750
# Output:2

# import math
# n = 700
# m = 750
# d = (m / n)
# print(math.ceil(d))  округляем в большую сторону

# Задача №3. 
# В некоторой школе решили набрать три новых
# математических класса и оборудовать кабинеты для
# них новыми партами. За каждой партой может сидеть
# два учащихся. Известно количество учащихся в
# каждом из трех классов. Выведите наименьшее
# число парт, которое нужно приобрести для них.
# Input: 20 21 22(ввод чисел НЕ в одну строку)
# Output: 32
# import math
# a = 20
# b = 21
# c = 22
# res = (a / 2) + (b / 2) + (c / 2)
# print(math.ceil(res))


# Задача №5. 
# Вагоны в электричке пронумерованы натуральными
# числами, начиная с 1 (при этом иногда вагоны
# нумеруются от «головы» поезда, а иногда – с
# «хвоста»; это зависит от того, в какую сторону едет
# электричка). В каждом вагоне написан его номер.
# Витя сел в i-й вагон от головы поезда и обнаружил,
# что его вагон имеет номер j. Он хочет определить,
# сколько всего вагонов в электричке. Напишите
# программу, которая будет это делать или сообщать,
# что без дополнительной информации это сделать
# невозможно.
# Input: 3 4(ввод на разных строках)
# Output: 6


# i = int(input())
# j = int(input())
# if i == j:
#     print("Не хватает данных")
# else:
#     print(i+j-1)

# Задача №7. 
# Дано натуральное число. Требуется определить,
# является ли год с данным номером високосным. Если
# год является високосным, то выведите YES, иначе
# выведите NO. Напомним, что в соответствии с
# григорианским календарем, год является
# високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.
# Input: 2016
# Output: YES

# a = int(input())
# if (a % 4 == 0) and (a % 100 !=0) or (a % 400 == 0):
#     print("yes")
# else:
#     print("no")

# Задача 2: Найдите сумму цифр трехзначного числа.
# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0)

# a = int(input())
# sum = (a % 10) + ((a % 100)// 10) + (a // 100)
# print(sum)

# Задача 4: Петя, Катя и Сережа делают из бумаги журавликов. Вместе
# они сделали S журавликов. Сколько журавликов сделал каждый
# ребенок, если известно, что Петя и Сережа сделали одинаковое
# количество журавликов, а Катя сделала в два раза больше журавликов,
# чем Петя и Сережа вместе?
# 6 -> 1 4 1
# 24 -> 4 16 4
# 60 -> 10 40 10

# s = int(input())
# print(f"Серёжа сделал {s // 6} журавликов")
# print(f"Петя сделал {s // 6} журавликов")
# print(f"Катя сделала {(s // 6)*4} журавликов")

# Задача 6: Вы пользуетесь общественным транспортом? Вероятно, вы
# расплачивались за проезд и получали билет с номером. Счастливым
# билетом называют такой билет с шестизначным номером, где сумма
# первых трех цифр равна сумме последних трех. Т.е. билет с номером
# 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать
# программу, которая проверяет счастливость билета.
# 385916 -> yes
# 123456 -> no

# t = int(input())
# t1 = t // 1000
# t2 = t % 1000
# if ((t1 % 10) + (t1 // 100) + ((t1 // 10) % 10) == (t2 % 10) + (t2 // 100) + ((t2 // 10) % 10)):
#     print("Билет счастливый!")
# else:
#     print("Увы,но не в этот раз :(")

# Задача №9. 
# По данному целому неотрицательному n вычислите
# значение n!. N! = 1 * 2 * 3 * … * N (произведение всех
# чисел от 1 до N) 0! = 1 Решить задачу используя цикл
# while
# Input: 5
# Output: 120

# n = int(input())
# a = 1
# res=1
# while (a <= n):
#     res=res*a
#     a+=1
# print(res)

# Задача №11. 
# Дано натуральное число A > 1. Определите, каким по
# счету числом Фибоначчи оно является, то есть
# выведите такое число n, что φ(n)=A. Если А не
# является числом Фибоначчи, выведите число -1.
# Input: 5
# Output: 6

# a = int(input())

# Задача №13. 
# Уставшие от необычно теплой зимы, жители решили узнать,
# действительно ли это самая длинная оттепель за всю историю
# наблюдений за погодой. Они обратились к синоптикам, а те, в
# свою очередь, занялись исследованиями статистики за
# прошлые годы. Их интересует, сколько дней длилась самая
# длинная оттепель. Оттепелью они называют период, в
# который среднесуточная температура ежедневно превышала
# 0 градусов Цельсия. Напишите программу, помогающую
# синоптикам в работе.
# Пользователь вводит число N – общее количество
# рассматриваемых дней (1 ≤ N ≤ 100). В следующих строках
# располагается N целых чисел.
# Каждое число – среднесуточная температура в
# соответствующий день. Температуры – целые числа и лежат в
# диапазоне от –50 до 50
# Input: 6 -> -20 30 -40 50 10 -10
# Output: 2
# import random
# n = int(input("Введите кол-во дней: "))
# i = 0
# x = 0
# list = []
# listCount = []
# while n > i:
#     list.append(random.randint(-50, 51))
#     i+=1
# print(list)

# for j in range (0,n):
#     if list[j] > 0:
#         x+=1
#     else:
#         listCount.append(x)
#         x = 0
# listCount.append(x)

# print(max(listCount))
# print(listCount)


# 15. Иван Васильевич пришел на рынок и решил
# купить два арбуза: один для себя, а другой для тещи.
# Понятно, что для себя нужно выбрать арбуз
# потяжелей, а для тещи полегче. Но вот незадача:
# арбузов слишком много и он не знает как же выбрать
# самый легкий и самый тяжелый арбуз? Помогите ему!
# Пользователь вводит одно число N – количество
# арбузов. Вторая строка содержит N чисел,
# записанных на новой строчке каждое. Здесь каждое
# число – это масса соответствующего арбуза
# Input: 5 -> 5 1 6 5 9
# Output: 1 9

# import random
# n = int(input("Введите кол-во арбузов на рынке: "))
# list = []
# i = 0
# for _ in range (n):
#     list.append(random.randint(5, 20))
# max = list[i]
# min = list[i]
# while n > i:
#     if list[i] < min:
#         min = list[i]
#     if list[i] > max:
#         max = list[i]
#     i+=1
# print(list)
# print(f"Минимальный {min}, Максимальный {max}") 


# Задача 10: На столе лежат n монеток.
# Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть

# import random
# n = int(input("Введите кол-во монет : "))
# list = []
# i = 0
# for _ in range (n):
#      list.append(random.randint(0, 1))
# print(list)
# resh = 0
# orel = 1
# cResh = 0
# cOr = 0

# for i in list:
#     if list[i] == 0:
#         cResh = cResh + 1
#         i+= 1
#     if list[i] == 1:
#         cOr = cOr + 1
#         i+= 1
# if cResh < cOr: min = cResh
# if cResh > cOr: min = cOr
# print(min)

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

n = int(input())
num = 2
res = 1
for i in (num*num < n):
    print(res)


# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница.
# Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P.
# Помогите Кате отгадать задуманные Петей числа

# x = int(input())

